package com.lightemittingsmew.redditreader;

import android.text.Html;
import android.text.SpannableStringBuilder;
import android.text.Spanned;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;

/**
 * Created by smw on 8/24/14.
 */
public class SubredditResult {
    private String url;
    private String fullDescription;
    private String publicDescription;
    private int subscribers;
    private Boolean over18;
    private long created;

    public SubredditResult(JSONObject jsonArticle){
        try {
            url = jsonArticle.getString("url");
            publicDescription = jsonArticle.getString("public_description_html");
            fullDescription = jsonArticle.getString("description_html");
            subscribers = jsonArticle.getInt("subscribers");
            over18 = jsonArticle.getBoolean("over18");
            created = jsonArticle.getLong("created_utc");
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }

    public static ArrayList<SubredditResult> parseSubredditList(String stories){
        ArrayList<SubredditResult> subredditList = new ArrayList<SubredditResult>();
        JSONArray jsonArraySubreddits = new JSONArray();
        try {
            jsonArraySubreddits = new JSONObject(stories).getJSONObject("data").getJSONArray("children");
        } catch (JSONException e) {
            e.printStackTrace();
        }

        for(int i=0;i<jsonArraySubreddits.length();i++){
            JSONObject currentSubreddit = null;
            try {
                currentSubreddit = jsonArraySubreddits.getJSONObject(i).getJSONObject("data");
            } catch (JSONException e) {
                e.printStackTrace();
            }

            subredditList.add(new SubredditResult(currentSubreddit));
        }

        return subredditList;
    }

    public String getName(){
        return url;
    }

    public Spanned getDescription(){
        SpannableStringBuilder ssb = new SpannableStringBuilder();
        String descriptionText;

        if(publicDescription.equals("null")){
            descriptionText = fullDescription;
        } else {
            descriptionText = publicDescription;
        }

        String descriptionHtml = Html.fromHtml(descriptionText).toString();

        ssb.append(Html.fromHtml(descriptionHtml));

        // Strip the trailing newline characters that were generated by the
        // HTML parser
        if(ssb.length() >= 2){
            ssb.delete(ssb.length() - 2, ssb.length());
        }

        return ssb;
    }

    public int getSubscribers(){
        return subscribers;
    }

    public String timeAgo(){
        long SECOND = 1000;
        long MINUTE = SECOND * 60;
        long HOUR = MINUTE * 60;
        long DAY = HOUR * 24;
        long WEEK = DAY * 7;
        long MONTH = DAY * 30;
        long YEAR = DAY * 365;

        String resultString;
        String unit;
        long unitsPast;

        long currentTime = System.currentTimeMillis();
        long timeDifference = currentTime - (created * 1000);

        // Calculate which unit to display
        if(timeDifference > YEAR){
            unit = "year";
            unitsPast = timeDifference / YEAR;
        } else if (timeDifference > MONTH) {
            unit = "month";
            unitsPast = timeDifference / MONTH;
        } else if (timeDifference > WEEK) {
            unit = "week";
            unitsPast = timeDifference / WEEK;
        } else if (timeDifference > DAY) {
            unit = "day";
            unitsPast = timeDifference / DAY;
        } else if (timeDifference > HOUR) {
            unit = "hour";
            unitsPast = timeDifference / HOUR;
        } else if (timeDifference > MINUTE) {
            unit = "minute";
            unitsPast = timeDifference / MINUTE;
        } else {
            unit = "second";
            unitsPast = timeDifference / SECOND;
        }

        // Use plural unit names if there is more than one
        if(unitsPast == 1){
            resultString = "1 " + unit;
        } else {
            resultString = unitsPast + " " + unit + "s";
        }

        return resultString;
    }
}
